<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.net.system.mapper.product.ProductSkuValMapper">
  
<resultMap id="BaseResultMap" type="com.net.system.model.ProductSkuVal">
  <id column="id" jdbcType="INTEGER" property="id" />
  <result column="attr_key_id" jdbcType="INTEGER" property="attrKeyId" />
  <result column="name" jdbcType="VARCHAR" property="name" />
  <result column="sort" jdbcType="INTEGER" property="sort" />
  <result column="img" jdbcType="VARCHAR" property="img" />
  <result column="type" jdbcType="INTEGER" property="type" />
</resultMap>

  
<sql id="Base_Column_List">
  id, attr_key_id, name, sort,img,type
</sql>

  
<delete id="delete" parameterType="INTEGER">
  delete from t_product_sku_val
  where id = #{id,jdbcType=INTEGER}
</delete>


<delete id="deleteByKeyId" parameterType="INTEGER">
  delete from t_product_sku_val
  where attr_key_id = #{id,jdbcType=INTEGER}
</delete>
  
<insert id="insert" parameterType="com.net.system.model.ProductSkuVal">
  insert into t_product_sku_val (attr_key_id, name, 
    sort,img,type)
  values (#{attrKeyId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
    #{sort,jdbcType=INTEGER},#{img},#{type})
</insert>

  
<insert id="insertDynamic" parameterType="com.net.system.model.ProductSkuVal">
  insert into t_product_sku_val
  <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="id != null">
      id,
    </if>
    <if test="attrKeyId != null">
      attr_key_id,
    </if>
    <if test="name != null">
      name,
    </if>
    <if test="sort != null">
      sort,
    </if>
     <if test="img != null">
      img,
    </if>
     <if test="type != null">
      type,
    </if>
  </trim>
  <trim prefix="values (" suffix=")" suffixOverrides=",">
    <if test="id != null">
      #{id,jdbcType=INTEGER},
    </if>
    <if test="attrKeyId != null">
      #{attrKeyId,jdbcType=INTEGER},
    </if>
    <if test="name != null">
      #{name,jdbcType=VARCHAR},
    </if>
    <if test="sort != null">
      #{sort,jdbcType=INTEGER},
    </if>
    <if test="img != null">
      #{img},
    </if>
    <if test="type != null">
      #{type},
    </if>
  </trim>
</insert>

  
<update id="updateDynamic" parameterType="com.net.system.model.ProductSkuVal">
  update t_product_sku_val
  <set>
    <if test="attrKeyId != null">
      attr_key_id = #{attrKeyId,jdbcType=INTEGER},
    </if>
    <if test="name != null">
      name = #{name,jdbcType=VARCHAR},
    </if>
    <if test="sort != null">
      sort = #{sort,jdbcType=INTEGER},
    </if>
     <if test="img != null">
      sort = #{img},
    </if>
    <if test="type != null">
      sort = #{type},
    </if>
  </set>
  where id = #{id,jdbcType=INTEGER}
</update>

  
<update id="update" parameterType="com.net.system.model.ProductSkuVal">
  update t_product_sku_val
  set attr_key_id = #{attrKeyId,jdbcType=INTEGER},
    name = #{name,jdbcType=VARCHAR},
    sort = #{sort,jdbcType=INTEGER},
    img = #{img,jdbcType=VARCHAR},
    type = #{type,jdbcType=INTEGER}
  where id = #{id,jdbcType=INTEGER}
</update>

  
<select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  select
	<include refid="Base_Column_List" />
  from  t_product_sku_val
  where id = #{id,jdbcType=INTEGER}
</select>

  
<sql id="findPageWithWhere">
    <where> 1=1 
	<if test="id != null" >
	  and id = #{id,jdbcType=INTEGER}
	</if>
	<if test="attrKeyId != null and attrKeyId != ''" >
	  and attr_key_id = #{attrKeyId,jdbcType=INTEGER}
	</if>
	<if test="name != null and name != ''" >
	  and name = #{name,jdbcType=VARCHAR}
	</if>
	<if test="sort != null" >
	  and sort = #{sort,jdbcType=INTEGER}
	</if>
  </where>
</sql>

  
<select id="findPageWithResult" parameterType="Map" resultMap="BaseResultMap">
  select
	<include refid="Base_Column_List" />
  from  t_product_sku_val
  <include refid="findPageWithWhere" />
</select>

<select id="finSkuId" parameterType="Map" resultType="String">
 select GROUP_CONCAT(v.id SEPARATOR '') id from t_product_sku_val v LEFT JOIN t_product_sku_key k on k.id=v.attr_key_id  where
   k.product_id=#{productId}  
   and v.`name` in
   <foreach collection="ids" item="item" index="index"
             separator="," open="(" close=")">
      #{item}
    </foreach>
   
    ORDER BY v.sort desc
</select>


</mapper>